<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/8YABPzD
        CS7+wwhl/sMIif7DCJz+wwed/sMIjv7DCG39wwk6/cUECP/GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/xgAA/MMIG/7D
        CIT+wwjf+b4H/9KhB/+thgj/mHYJ/5d1Cf+pggj/y5wH//S7B//+wwjr/sMIl/3DCCv/xgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/MQHCf7D
        CIH+wwfzyJoI/2lSC/8lIBD/FRQT/xUVFf8WFhb/FhYW/xUVFf8VFBT/HhsQ/1tIDP+3jQj//MEH+/7D
        CJ38wwgVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP3D
        CCP+wwjN3KkH/1ZEDP8WFRP/FxcX/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/FxcX/xUV
        FP9CNQ3/yZoI///DB+P9wwg9/8YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD9wwgw/8MH56yECP8gHBH/FxcX/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgY
        GP8YGBj/GBgY/xcXF/8YFxL/jW0J//3CB/b9wwhQ/8YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/cMIIv/DB+aYdgn/FxYT/xcXF/8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgY
        GP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8VFRT/dFsK//3BB/f9wwhBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPzEBgf+wwjKroYI/xcWE/8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgY
        GP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8VFRT/iGkJ///DB+j8wwgaAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/xgAA/sMIet+rB/8hHRD/FxcX/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgY
        GP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8XFhP/wZQI//7D
        CKn/xgABAAAAAAAAAAAAAAAAAAAAAPzDCBb/wwfxXEgL/xYWFv8YGBj/GBgY/xgYGP8YGBj/GBgY/xgY
        GP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xcX
        F/85Lw7/+b8H/v3DCDkAAAAAAAAAAAAAAAAAAAAA/sMIe8+fB/8WFhP/GBgY/xgYGP8cGxj/HBsY/xwb
        GP8cGxj/HBsY/xoaGP8YGBj/GhoY/xsaGP8YGBj/GBgY/xgYGP8aGhj/GRgY/xgYGP8YGBj/GRkY/xwb
        GP8YGBj/GBgY/xUVFf+oggj//sMIqv/GAAAAAAAAAAAAAP/GAAL+wwjWclkK/xcXF/8YGBj/HRwX/9yp
        CP/rtAj/67QI/+u0CP/rtAj/lnUO/xgYGP+EaA//uI8L/xgYGP8YGBj/GhkY/7qQC/9YRxP/GBgY/xgY
        GP9PQRP/57II/yUiGP8YGBj/FxcX/0k7Df//wwf2/MQIEgAAAAAAAAAA/MMJI/zBB/4rJQ//GBgY/xgY
        GP8eHRf/77cI/5d3Dv9aSRP/WkkT/1pJE/8/NRX/GBgY/49wD//Imwv/GBgY/xgYGP9IPBT//sIH/7+U
        C/8ZGRj/GBgY/1ZGE//8wAf/JyQY/xgYGP8YGBj/GBcS/+exB//9wwhSAAAAAAAAAAD9wwhY3KkH/xUV
        E/8YGBj/GBgY/x4dF//vtwj/b1kR/xgYGP8YGBj/GBgY/xgYGP8YGBj/j3AP/8ibC/8YGBj/GBgY/66H
        DP/BlQv/970H/0I4FP8YGBj/VkYT//zAB/8nJBj/GBgY/xgYGP8VFRX/tYwI//7DCIgAAAAAAAAAAP7D
        CHu6jwj/FRUV/xgYGP8YGBj/Hh0X/++3CP9vWRH/GBgY/xgYGP8YGBj/GBgY/xgYGP+PcA//yJsL/xgY
        GP81LhX/+L4H/00/FP+1jAz/poIN/xgYGP9WRhP//MAH/yckGP8YGBj/GBgY/xYWFv+QcAn//sMIqwAA
        AAAAAAAA/sMHjaeBCf8VFRX/GBgY/xgYGP8eHRf/77cI/5BxDv9OQBP/TkAT/00/E/8bGxj/GBgY/49w
        D//Imwv/GBgY/5Z1Dv/KnAr/GhoY/05AE//1vAj/MCoW/1ZGE//8wAf/JyQY/xgYGP8YGBj/FxcX/3pf
        C//+wwe9AAAAAAAAAAD+wweNpoAJ/xUVFf8YGBj/GBgY/x4dF//vtwj/9rwI//G5CP/xuQj/8bkI/ygk
        F/8YGBj/j3AP/8ibC/8nIxf/7rcI/2dSEv8YGBj/GhoY/8qcCv+Obw//VkYT//zAB/8nJBj/GBgY/xgY
        GP8XFxf/el8L//7DB70AAAAAAAAAAP7DCH24jgj/FRUV/xgYGP8YGBj/Hh0X/++3CP9zXBD/Hx0X/x8d
        F/8fHRf/GRgY/xgYGP+PcA//yJsL/35kEP/hrQn/Hx0X/xgYGP8YGBj/ZFAS/+mzCP9hThL//MAH/yck
        GP8YGBj/GBgY/xYWFv+Obgr//sMIrQAAAAAAAAAA/cMIW9qnB/8VFRP/GBgY/xgYGP8eHRf/77cI/29Z
        Ef8YGBj/GBgY/xgYGP8YGBj/GBgY/49wD//Nngr/36wJ/4JnEP8YGBj/GBgY/xgYGP8eHBf/3aoJ/6+I
        DP/8wAf/JyQY/xgYGP8YGBj/FRUV/7OKCP/+wwiLAAAAAAAAAAD8wwkm+8AH/ykjD/8YGBj/GBgY/x4d
        F//vtwj/b1kR/xgYGP8YGBj/GBgY/xgYGP8YGBj/j3AP/+y1CP/yuQj/KiUW/xgYGP8YGBj/GBgY/xgY
        GP96YRD/7LUI//zAB/8nJBj/GBgY/xgYGP8YFhL/5K8H//3DCFYAAAAAAAAAAP/GAAP+wwjabVYL/xcX
        F/8YGBj/Hh0X/++3CP/dqgn/ypwL/8qcC//KnAv/WkkT/xgYGP+PcA///8MH/557Dv8YGBj/GBgY/xgY
        GP8YGBj/GBgY/yUiF//stQj//MAH/yckGP8YGBj/FxcX/0U4Df//wwf4/MMIFQAAAAAAAAAAAAAAAP7D
        CIHJmwj/FhUT/xgYGP8aGhj/dFwQ/3xiEP98YhD/fGIQ/3xiEP88MxX/GBgY/0o9FP98YhD/MisW/xgY
        GP8YGBj/GBgY/xgYGP8YGBj/GBgY/1lIEv96YBD/HhwY/xgYGP8VFRX/on0I//7DCLH/xgAAAAAAAAAA
        AAAAAAAA/MMIG/7DB/RUQwz/FxcX/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgY
        GP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/FxcX/zQrDv/3vQf+/cMIQAAA
        AAAAAAAAAAAAAAAAAAD/xgAA/sMIhNmnB/8eGxH/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgY
        GP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8WFhP/uY4I//7D
        CLL/xgABAAAAAAAAAAAAAAAAAAAAAAAAAAD8xAcK/sMI06R/CP8WFRP/GBgY/xgYGP8YGBj/GBgY/xgY
        GP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/FRUV/31h
        Cv//wwft/cMIIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9wwgq/8MH7IxsCf8WFRP/GBgY/xgY
        GP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xUV
        Ff9pUgv/+8AH+v3DCEz/xgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/GAAD9wwg6/sMH7Z97
        Cf8cGRH/FxcX/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xcX
        F/8XFhP/gGMK//vAB/r9wwhd/8YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/G
        AAD9wwgt/sMI2NOiB/9KOw3/FRUU/xcXF/8YGBj/GBgY/xgYGP8YGBj/GBgY/xgYGP8YGBj/GBgY/xcX
        F/8VFRX/OC4O/72RCP//wwfr/cMISf/GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD8wwgO/sMIkP3CB/m7kAj/XEgM/x4bEP8VFBT/FhYW/xYWFv8WFhb/FhYW/xUV
        FP8aGBH/TT4N/6qDCP/5vgf+/sMIrPzDCB3/xgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/xgAA/cMIJf7DCJT+wwjr8rkH/8WYB/+gewn/iWsK/4hq
        Cv+aeAn/vpII/+y1B///wwf0/sMIp/3DCDj/xgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/8YAAPzFBQj9wwk+/sMIdf7D
        CJn+wwes/sMHrf7DCJ7+wwh9/cMISvzEBw7/xgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////gB///gAH//gAAf/wAAD/4AAAf8AAAD+AAAAfgAAADwAAAA8AA
        AAOAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABwAAAA8AAAAPgAAAD4AAAB/AA
        AA/4AAAf/AAAP/4AAH//gAD//+AH//////8=
</value>
  </data>
</root>